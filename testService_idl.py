# Python stubs generated by omniidl from testService.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "SDOPackage.idl"
import SDOPackage_idl
_0_SDOPackage = omniORB.openModule("SDOPackage")
_0_SDOPackage__POA = omniORB.openModule("SDOPackage__POA")

#
# Start of module "TestModule"
#
__name__ = "TestModule"
_0_TestModule = omniORB.openModule("TestModule", r"testService.idl")
_0_TestModule__POA = omniORB.openModule("TestModule__POA", r"testService.idl")


# interface testService
_0_TestModule._d_testService = (omniORB.tcInternal.tv_objref, "IDL:TestModule/testService:1.0", "testService")
omniORB.typeMapping["IDL:TestModule/testService:1.0"] = _0_TestModule._d_testService
_0_TestModule.testService = omniORB.newEmptyClass()
class testService (_0_SDOPackage.SDOService):
    _NP_RepositoryId = _0_TestModule._d_testService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_TestModule.testService = testService
_0_TestModule._tc_testService = omniORB.tcInternal.createTypeCode(_0_TestModule._d_testService)
omniORB.registerType(testService._NP_RepositoryId, _0_TestModule._d_testService, _0_TestModule._tc_testService)

# testService operations and attributes
testService._d_echo = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)

# testService object reference
class _objref_testService (_0_SDOPackage._objref_SDOService):
    _NP_RepositoryId = testService._NP_RepositoryId

    def __init__(self):
        _0_SDOPackage._objref_SDOService.__init__(self)

    def echo(self, *args):
        return _omnipy.invoke(self, "echo", _0_TestModule.testService._d_echo, args)

    __methods__ = ["echo"] + _0_SDOPackage._objref_SDOService.__methods__

omniORB.registerObjref(testService._NP_RepositoryId, _objref_testService)
_0_TestModule._objref_testService = _objref_testService
del testService, _objref_testService

# testService skeleton
__name__ = "TestModule__POA"
class testService (_0_SDOPackage__POA.SDOService):
    _NP_RepositoryId = _0_TestModule.testService._NP_RepositoryId


    _omni_op_d = {"echo": _0_TestModule.testService._d_echo}
    _omni_op_d.update(_0_SDOPackage__POA.SDOService._omni_op_d)

testService._omni_skeleton = testService
_0_TestModule__POA.testService = testService
omniORB.registerSkeleton(testService._NP_RepositoryId, testService)
del testService
__name__ = "TestModule"

#
# End of module "TestModule"
#
__name__ = "testService_idl"

_exported_modules = ( "TestModule", )

# The end.
